/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUTADAPT_DEMULTIPLEX {
        publishDir = [
            path: { "${params.outdir}/raw/" },
            mode: params.publish_dir_mode,
            pattern: '*demulti.fastq.gz'
        ]
    }

    withName: FASTQC_RAW {
        publishDir = [
            path: { "${params.outdir}/fastqc/raw/" },
            mode: params.publish_dir_mode
        ]
        ext.args = '--quiet'
    }

    withName: FASTQC_TRIMMED {
        publishDir = [
            path: { "${params.outdir}/fastqc/trimmed/" },
            mode: params.publish_dir_mode
        ]
        ext.args = '--quiet'
        ext.prefix = '.trimmed'
    }

    withName: CUTADAPT {
        ext.args = { params.discard_untrimmed ?  "-a ${params.adapter_to_trim} --minimum-length ${params.min_after_trimming} --discard-untrimmed"  :  "-a ${params.adapter_to_trim} --minimum-length ${params.min_after_trimming}" }
    }


//    withName: TRIMGALORE {
//        ext.args = "--fastqc --adapter ${params.adapter_to_trim} --length ${params.min_after_trimming}"
//    }

    withName: SEQTK_RAW {
        publishDir = [
            path: { "${params.outdir}/samples/raw/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SEQTK_TRIM {
        publishDir = [
            path: { "${params.outdir}/samples/trimmed/" },
            mode: params.publish_dir_mode
        ]
    }

//    withName: BOWTIE2_ALIGN {
//        ext.args = "-N 1 -L 16 -D 30 -R 4"
//    }

    withName: BOWTIE_ALIGN {
        ext.args = " -m 1 --no-unal --best -v 1"
    }


    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: CUSTOM_BAMTOWIG {
        publishDir = [
            path: { "${params.outdir}/wigs/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: TRANSIT_EXPORT {
        ext.args = "-n TTR"
    }


    // withName: DEEPTOOLS_BAMCOVERAGE {
    //    ext.args = "--outFileFormat bigwig"
    // }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
